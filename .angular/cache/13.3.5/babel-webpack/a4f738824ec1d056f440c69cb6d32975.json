{"ast":null,"code":"import _asyncToGenerator from \"/home/yishai/projects/privateProjects/petWars/petWars/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment as env } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nexport class LoadPicsService {\n  constructor() {}\n\n  loadDogImg() {\n    return _asyncToGenerator(function* () {\n      const dogImageUrl = yield fetch(env.dogsUrl).then(res => res.json());\n      return dogImageUrl.url;\n    })();\n  }\n\n  loadCatImg() {\n    return _asyncToGenerator(function* () {\n      const catImage = yield fetch(env.catsUrl).then(res => res.json());\n      return catImage[0];\n    })();\n  }\n\n  loadBirdImg() {\n    return _asyncToGenerator(function* () {\n      const birdImg = yield fetch(env.birdsUrl).then(res => res.json());\n      return birdImg[0];\n    })();\n  }\n\n}\n\nLoadPicsService.ɵfac = function LoadPicsService_Factory(t) {\n  return new (t || LoadPicsService)();\n};\n\nLoadPicsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoadPicsService,\n  factory: LoadPicsService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"sources":["/home/yishai/projects/privateProjects/petWars/petWars/src/app/services/load-pics.service.ts"],"names":["environment","env","i0","LoadPicsService","constructor","loadDogImg","dogImageUrl","fetch","dogsUrl","then","res","json","url","loadCatImg","catImage","catsUrl","loadBirdImg","birdImg","birdsUrl","ɵfac","LoadPicsService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAW,IAAIC,GAAxB,QAAmC,gCAAnC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,GAAG,CAAG;;AACXC,EAAAA,UAAU,GAAG;AAAA;AACf,YAAMC,WAAW,SAASC,KAAK,CAACN,GAAG,CAACO,OAAL,CAAL,CAAmBC,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAjC,CAA1B;AACA,aAAOL,WAAW,CAACM,GAAnB;AAFe;AAGlB;;AACKC,EAAAA,UAAU,GAAG;AAAA;AACf,YAAMC,QAAQ,SAASP,KAAK,CAACN,GAAG,CAACc,OAAL,CAAL,CAAmBN,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAjC,CAAvB;AACA,aAAOG,QAAQ,CAAC,CAAD,CAAf;AAFe;AAGlB;;AACKE,EAAAA,WAAW,GAAG;AAAA;AAChB,YAAMC,OAAO,SAASV,KAAK,CAACN,GAAG,CAACiB,QAAL,CAAL,CAAoBT,IAApB,CAA0BC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAlC,CAAtB;AACA,aAAOM,OAAO,CAAC,CAAD,CAAd;AAFgB;AAGnB;;AAbwB;;AAe7Bd,eAAe,CAACgB,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIlB,eAAV,GAAP;AAAsC,CAAnG;;AACAA,eAAe,CAACmB,KAAhB,GAAwB,aAAcpB,EAAE,CAACqB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,eAAT;AAA0BsB,EAAAA,OAAO,EAAEtB,eAAe,CAACgB,IAAnD;AAAyDO,EAAAA,UAAU,EAAE;AAArE,CAAtB,CAAtC","sourcesContent":["import { environment as env } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nexport class LoadPicsService {\n    constructor() { }\n    async loadDogImg() {\n        const dogImageUrl = await fetch(env.dogsUrl).then((res) => res.json());\n        return dogImageUrl.url;\n    }\n    async loadCatImg() {\n        const catImage = await fetch(env.catsUrl).then((res) => res.json());\n        return catImage[0];\n    }\n    async loadBirdImg() {\n        const birdImg = await fetch(env.birdsUrl).then((res) => res.json());\n        return birdImg[0];\n    }\n}\nLoadPicsService.ɵfac = function LoadPicsService_Factory(t) { return new (t || LoadPicsService)(); };\nLoadPicsService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoadPicsService, factory: LoadPicsService.ɵfac, providedIn: \"root\" });\n"]},"metadata":{},"sourceType":"module"}