{"ast":null,"code":"import _asyncToGenerator from \"/home/yishai/projects/privateProjects/petWars/petWars/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment as env } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nexport class LoadPicsService {\n  constructor() {}\n\n  loadDogImg() {\n    return _asyncToGenerator(function* () {\n      const dogImageUrl = yield fetch(env.dogsUrl);\n      return dogImageUrl.url;\n    })();\n  }\n\n  loadCatImg() {\n    return _asyncToGenerator(function* () {\n      const catImage = yield fetch(env.catsUrl).then(res => res.json());\n      return catImage[0];\n    })();\n  }\n\n  loadBirdImg() {\n    return _asyncToGenerator(function* () {\n      const duckImage = yield fetch(env.ducksUrl, {\n        headers: {\n          Origin: \"*\"\n        }\n      });\n      return duckImage.url;\n    })();\n  }\n\n}\n\nLoadPicsService.ɵfac = function LoadPicsService_Factory(t) {\n  return new (t || LoadPicsService)();\n};\n\nLoadPicsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoadPicsService,\n  factory: LoadPicsService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"sources":["/home/yishai/projects/privateProjects/petWars/petWars/src/app/services/load-pics.service.ts"],"names":["environment","env","i0","LoadPicsService","constructor","loadDogImg","dogImageUrl","fetch","dogsUrl","url","loadCatImg","catImage","catsUrl","then","res","json","loadBirdImg","duckImage","ducksUrl","headers","Origin","ɵfac","LoadPicsService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAW,IAAIC,GAAxB,QAAmC,gCAAnC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,GAAG,CAAG;;AACXC,EAAAA,UAAU,GAAG;AAAA;AACf,YAAMC,WAAW,SAASC,KAAK,CAACN,GAAG,CAACO,OAAL,CAA/B;AACA,aAAOF,WAAW,CAACG,GAAnB;AAFe;AAGlB;;AACKC,EAAAA,UAAU,GAAG;AAAA;AACf,YAAMC,QAAQ,SAASJ,KAAK,CAACN,GAAG,CAACW,OAAL,CAAL,CAAmBC,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAjC,CAAvB;AACA,aAAOJ,QAAQ,CAAC,CAAD,CAAf;AAFe;AAGlB;;AACKK,EAAAA,WAAW,GAAG;AAAA;AAChB,YAAMC,SAAS,SAASV,KAAK,CAACN,GAAG,CAACiB,QAAL,EAAe;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAAX,OAAf,CAA7B;AACA,aAAOH,SAAS,CAACR,GAAjB;AAFgB;AAGnB;;AAbwB;;AAe7BN,eAAe,CAACkB,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,eAAV,GAAP;AAAsC,CAAnG;;AACAA,eAAe,CAACqB,KAAhB,GAAwB,aAActB,EAAE,CAACuB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEvB,eAAT;AAA0BwB,EAAAA,OAAO,EAAExB,eAAe,CAACkB,IAAnD;AAAyDO,EAAAA,UAAU,EAAE;AAArE,CAAtB,CAAtC","sourcesContent":["import { environment as env } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nexport class LoadPicsService {\n    constructor() { }\n    async loadDogImg() {\n        const dogImageUrl = await fetch(env.dogsUrl);\n        return dogImageUrl.url;\n    }\n    async loadCatImg() {\n        const catImage = await fetch(env.catsUrl).then((res) => res.json());\n        return catImage[0];\n    }\n    async loadBirdImg() {\n        const duckImage = await fetch(env.ducksUrl, { headers: { Origin: \"*\" } });\n        return duckImage.url;\n    }\n}\nLoadPicsService.ɵfac = function LoadPicsService_Factory(t) { return new (t || LoadPicsService)(); };\nLoadPicsService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoadPicsService, factory: LoadPicsService.ɵfac, providedIn: \"root\" });\n"]},"metadata":{},"sourceType":"module"}